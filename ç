require 'URI'

class RequestParser

  CRLF = "\r\n"

  def parse(request)
    @request_parts = request.split CRLF
    request_line = @request_parts.at(0)
    if ends_with_crlf(request)
      RequestLineParser.new.parse(request_line) do |application|
        yield(application)
      end
    end
  end

  def ends_with_crlf(request)
    request.end_with?(CRLF*2)
  end

end

class RequestLineParser
  METHODS = ['GET']
  HTTP_1_1 = "HTTP/1.1"

  def parse(request_line, &block)
    @words = request_line.split
    yield(application) if first_word_is_a_method &&
                          second_word_is_a_http_url &&
                          request_line_ends_with_http11
  end

  def first_word_is_a_method
    METHODS.include?@words.at(0)
  end

  def second_word_is_a_http_url
     (@words.at(1).start_with?("/")) || URI.parse(@words.at(1)).is_a?(URI::HTTP)
  end

  def request_line_ends_with_http11()
    @words.at(2) == HTTP_1_1
  end

  def application
    return '/' if @words.at(1).start_with?('http://')
    @words.at(1)
  end
end
